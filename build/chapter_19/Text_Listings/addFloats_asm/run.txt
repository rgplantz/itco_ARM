bob@bob-MS-7522:~/NoStarch/x-86/progs_working/chap19/addFloats_asm$ ./addFloats 
Enter a number: 123.4
Enter a number: 567.8
123.400002 + 567.799988 = 691.200012
bob@bob-MS-7522:~/NoStarch/x-86/progs_working/chap19/addFloats_asm$ 


bob@bob-MS-7522:~/NoStarch/x-86/progs_working/chap19/addFloats_asm$ gdb ./addFloats 
GNU gdb (Ubuntu 9.2-0ubuntu1~20.04) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./addFloats...
(gdb) li 53
48	        cvtss2sd   xmm0, x[rbp] # convert to double
49	        cvtss2sd   xmm1, y[rbp] # convert to double
50	        cvtss2sd   xmm2, z[rbp] # convert to double
51	        lea     rdi, printFormat[rip]
52	        mov     eax, 3          # 3 xmm regs.
53	        call    printf@plt
54	
55	        mov     eax, 0      # return 0;
56	        mov     rcx, qword ptr canary[rbp]
57	        xor     rcx, qword ptr fs:40
(gdb) b 53
Breakpoint 1 at 0x11e4: file addFloats.s, line 53.
(gdb) r
Starting program: /home/bob/NoStarch/x-86/progs_working/chap19/addFloats_asm/addFloats 
Enter a number: 123.4
Enter a number: 567.8

Breakpoint 1, main () at addFloats.s:53
53	        call    printf@plt
(gdb) i r rbp
rbp            0x7fffffffdee0      0x7fffffffdee0
(gdb) x/3xw 0x7fffffffdecc
0x7fffffffdecc:	0x42f6cccd	0x440df333	0x442ccccd
(gdb) x/3fw 0x7fffffffdecc
0x7fffffffdecc:	123.400002	567.799988	691.200012
(gdb) i r xmm0
xmm0           {v4_float = {0x0, 0x3, 0x0, 0x0}, v2_double = {0x7b, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0xa0, 0x99, 0xd9, 0x5e, 0x40, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int16 = {0x0, 0xa000, 0xd999, 0x405e, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0xa0000000, 0x405ed999, 0x0, 0x0}, v2_int64 = {0x405ed999a0000000, 0x0}, uint128 = 0x405ed999a0000000}
(gdb) p $xmm0.v2_double
$1 = {123.40000152587891, 0}
(gdb) p $xmm1.v2_double
$2 = {567.79998779296875, 0}
(gdb) p $xmm2.v2_double
$3 = {691.20001220703125, 0}
(gdb) p/x $xmm0.v2_int64
$4 = {0x405ed999a0000000, 0x0}
(gdb) p/x $xmm1.v2_int64
$5 = {0x4081be6660000000, 0x0}
(gdb) p/x $xmm2.v2_int64
$6 = {0x40859999a0000000, 0x0}
(gdb) cont
Continuing.
123.400002 + 567.799988 = 691.200012
[Inferior 1 (process 2547) exited normally]
(gdb) 






(gdb) li 50
45	        movss   xmm2, x[rbp]    # load x
46	        addss   xmm2, y[rbp]    # compute
47	        movss   z[rbp], xmm2    #     x + y
48	        cvtss2sd   xmm0, x[rbp] # convert to double
49	        cvtss2sd   xmm1, y[rbp] # convert to double
50	        cvtss2sd   xmm2, z[rbp] # convert to double
51	        lea     rdi, printFormat[rip]
52	        mov     eax, 3          # 3 xmm regs.
53	        call    printf@plt
54	
(gdb) b 53
Breakpoint 1 at 0x11e4: file addFloats.s, line 53.

(gdb) r
Starting program: /home/bob/NoStarch/x-86/progs_working/chap19/addFloats_asm/addFloats 
Enter a number: 16777215.0
Enter a number: 0.1

Breakpoint 1, main () at addFloats.s:53
53	        call    printf@plt
(gdb) i r rbp
rbp            0x7fffffffdee0      0x7fffffffdee0
(gdb) x/3xw 0x7fffffffdecc
0x7fffffffdecc:	0x4b7fffff	0x3dcccccd	0x4b7fffff
(gdb) x/3fw 0x7fffffffdecc
0x7fffffffdecc:	16777215	0.100000001	16777215
(gdb) i r xmmo
Invalid register `xmmo'
(gdb) i r xmm0
xmm0           {v4_float = {0x0, 0xe, 0x0, 0x0}, v2_double = {0xffffff, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0xe0, 0xff, 0xff, 0x6f, 0x41, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int16 = {0x0, 0xe000, 0xffff, 0x416f, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0xe0000000, 0x416fffff, 0x0, 0x0}, v2_int64 = {0x416fffffe0000000, 0x0}, uint128 = 0x416fffffe0000000}
(gdb) p $xmm0.v2_double
$1 = {16777215, 0}
(gdb) p $xmm1.v2_double
$2 = {0.10000000149011612, 0}
(gdb) p $xmm2.v2_double
$3 = {16777215, 0}
(gdb) p/x $xmm0.v2_int64
$4 = {0x416fffffe0000000, 0x0}
(gdb) p/x $xmm1.v2_int64
$5 = {0x3fb99999a0000000, 0x0}
(gdb) p/x $xmm2.v2_int64
$6 = {0x416fffffe0000000, 0x0}
(gdb) cont
Continuing.
16777215.0000000000 + 0.1000000015 = 16777215.0000000000
[Inferior 1 (process 2589) exited normally]
(gdb) 



(gdb) b 53
Breakpoint 1 at 0x11e4: file addFloats.s, line 53.
(gdb) r
Starting program: /home/bob/NoStarch/x-86/progs_working/chap19/addFloats_asm/addFloats 
Enter a number: 1677721.5
Enter a number: -1677721.4

Breakpoint 1, main () at addFloats.s:53
53	        call    printf@plt
(gdb) x/3xw 0x7fffffffdecc
0x7fffffffdecc:	0x49cccccc	0xc9cccccb	0x3e000000
(gdb) x/3fw 0x7fffffffdecc
0x7fffffffdecc:	1677721.5	-1677721.38	0.125
(gdb) c
Continuing.
1677721.500000 + -1677721.375000 = 0.125000
[Inferior 1 (process 4018) exited normally]
(gdb) q


(gdb) b 53
Breakpoint 1 at 0x11e4: file addFloats.s, line 53.
(gdb) r
Starting program: /home/bob/NoStarch/x-86/progs_working/chap19/addFloats_asm/addFloats 
Enter a number: 1677721.5
Enter a number: -1677721.25

Breakpoint 1, main () at addFloats.s:53
53	        call    printf@plt
(gdb) x/3xw 0x7fffffffdecc
0x7fffffffdecc:	0x49cccccc	0xc9ccccca	0x3e800000
(gdb) x/3fw 0x7fffffffdecc
0x7fffffffdecc:	1677721.5	-1677721.25	0.25
(gdb) c
Continuing.
1677721.500000 + -1677721.250000 = 0.250000
[Inferior 1 (process 4035) exited normally]




bob@bob-MS-7522:~/NoStarch/x-86/progs_working/chap19/addFloats_asm$ ./addFloats 
Enter a number: 1.23456009
Enter a number: -1.23456001
1.2345601320 + -1.2345600128 = 0.0000001192
bob@bob-MS-7522:~/NoStarch/x-86/progs_working/chap19/addFloats_asm$ 

bob@bob-MS-7522:~/NoStarch/x-86/progs_working/chap19/addFloats_asm$ ./addFloats 
Enter a number: 123456009.0
Enter a number: -123456001.0
123456008.0000000000 + -123456000.0000000000 = 8.0000000000
bob@bob-MS-7522:~/NoStarch/x-86/progs_working/chap19/addFloats_asm$ 


bob@bob-MS-7522:~/NoStarch/x-86/progs_working/chap19/addFloats_asm$ ./addFloats 
Enter a number: 16777215
Enter a number: -16777214
16777215.0000000000 + -16777214.0000000000 = 1.0000000000
bob@bob-MS-7522:~/NoStarch/x-86/progs_working/chap19/addFloats_asm$ ./addFloats 
Enter a number: 1677721.5
Enter a number: -1677721.4
1677721.5000000000 + -1677721.3750000000 = 0.1250000000
bob@bob-MS-7522:~/NoStarch/x-86/progs_working/chap19/addFloats_asm$ ./addFloats 
Enter a number: 167772.15
Enter a number: -167772.14
167772.1562500000 + -167772.1406250000 = 0.0156250000
bob@bob-MS-7522:~/NoStarch/x-86/progs_working/chap19/addFloats_asm$ ./addFloats 
Enter a number: 16777.215
Enter a number: -16777.214
16777.2148437500 + -16777.2148437500 = 0.0000000000
bob@bob-MS-7522:~/NoStarch/x-86/progs_working/chap19/addFloats_asm$ 

